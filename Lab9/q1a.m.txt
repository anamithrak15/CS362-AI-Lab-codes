%----------------------------------------------
% Lab Assignment -9
% Group - 2
% Ref: Reinforcement Learning, Sutton and Barto
%----------------------------------------------
% Question - 1 - A
% Binary Bandit A
% Two actions 1 and 2
% Rewards are stochastic 1-Success/ 0-Failure
% 
% 
% steps = Number of time steps
% 
% rewards = matrix storing the action and its corresponding rewars at a time
% step
% 
% totalValue = Total value received after a time step
%
% e = array containing different values of epsilon
%
%----------------------------------------------

% Initialize variables and parameters
steps = 50;
rewards = zeros(steps, 2, 3); % Adjust dimensions to store rewards for different epsilons
totalValue = zeros(steps, 3);

% Loop over different values of epsilon
for j = 1:3
    e = [0.01, 0.1, 0.3]; % Define epsilon values
    epsilon = e(j);

    % Simulate bandit problem
    for i = 1:steps
        % Exploration
        if rand < epsilon || i == 1
            action = randi(2); % Randomly choose an action
            reward = binaryBanditA(action); % Get reward from bandit
        else
            % Exploitation
            % Choose action with maximum total reward so far
            [~, action] = max(totalValue(max(i - 1, 1), :)); % Handle first iteration separately
            reward = binaryBanditA(action); % Get reward from bandit
        end

        % Update rewards and total value
        rewards(i, :, j) = [reward, action];
        if i > 1
            totalValue(i, j) = reward + totalValue(i - 1, j);
        else
            totalValue(i, j) = reward; % For the first iteration
        end
    end
end

% Plot rewards
figure;
subplot(2, 1, 1);
hold on;
colors = {'b', 'r', 'g'}; % Define colors for different epsilon values
for j = 1:3
    plot(rewards(:, 1, j), 'Color', colors{j}); % Plot rewards for each epsilon
end
hold off;
xlabel('Time Steps');
ylabel('Reward');
legend('e = 0.01', 'e = 0.1', 'e = 0.3');
title('Binary Bandit A - Rewards for Different Epsilons');

% Plot total successes
subplot(2, 1, 2);
hold on;
for j = 1:3
    plot(totalValue(:, j), 'Color', colors{j}); % Plot total successes for each epsilon
end
hold off;
xlabel('Time Steps');
ylabel('Total Successes');
legend('e = 0.01', 'e = 0.1', 'e = 0.3');
title('Binary Bandit A - Total Successes for Different Epsilons');
